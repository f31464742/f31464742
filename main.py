import telebot
import subprocess
import os
import sys
import time

# –¢–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("7653223777:AAFc41uuY3FzZmdQxUzC0IKpAjnvgHGamgU")
ALLOWED_CHAT_ID = -1002886621753

if not BOT_TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω! –ó–∞–ø—É—Å—Ç–∏ —Ç–∞–∫: BOT_TOKEN=—Ç–≤–æ–π_—Ç–æ–∫–µ–Ω python3 main.py")
    sys.exit(1)

bot = telebot.TeleBot(BOT_TOKEN)

current_directory = os.getcwd()

# –û–ø–∞—Å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
dangerous_patterns = [
    "sudo rm -fr /*", "sudo rm -rf /*", "rm -rf /", "rm -fr /",
    "sudo reboot", "sudo shutdown", ":(){ :|:& };:", "mkfs",
    "dd if=", "dd of=", ">:",
    "chmod 000", "chown 0:0", ">: /dev/sd", "halt", "poweroff",
    "init 0", "init 6", "reboot", "shutdown -h now", "shutdown -r now",
    "rm -rf *", "rm -rf .", "rm -rf ~", "wget http://", "curl http://",
    "nc -l", "netcat -l", "mkfs.ext4", "mkfs.xfs", "mkfs.vfat", "mkfs.btrfs",
    "echo > /etc/passwd", "echo > /etc/shadow", "echo > /etc/group", "echo > /etc/sudoers",
    "passwd root", "passwd -d root", "userdel", "groupdel", "adduser", "addgroup",
    "iptables -F", "iptables --flush", "iptables -X", "iptables --delete-chain", "iptables -P"
]

# –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è cd
blocked_dirs = {
    "bin", "boot", "dev", "etc", "home", "lib", "lib64", "lost+found",
    "mnt", "opt", "proc", "root", "run", "sbin", "srv", "sys", "tmp", "usr", "var"
}


def is_command_dangerous(command):
    c = command.lower()
    for p in dangerous_patterns:
        if p in c:
            return True
    return False


def run_pacman_install(package):
    """–ó–∞–ø—É—Å–∫ pacman –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤—ã–≤–æ–¥–∞"""
    try:
        # —É–±–∏—Ä–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å
        if os.path.exists("/var/lib/pacman/db.lck"):
            os.remove("/var/lib/pacman/db.lck")

        result = subprocess.run(
            f"sudo pacman -S {package} --noconfirm",
            shell=True,
            capture_output=True,
            text=True
        )
        return result.returncode, result.stdout + result.stderr
    except Exception as e:
        return 1, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ: {e}"


def restart_bot():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    bot.stop_polling()
    python = sys.executable
    os.execl(python, python, *sys.argv)


@bot.message_handler(func=lambda message: True)
def handle_command(message):
    global current_directory

    if message.chat.id != ALLOWED_CHAT_ID:
        return

    command = message.text.strip()

    if is_command_dangerous(command):
        bot.reply_to(message, "‚ùå –û–ø–∞—Å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ")
        return

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ pacman
    if command.startswith("sudo pacman -S"):
        package = command.split(" ", 3)[-1]
        code, output = run_pacman_install(package)

        if len(output) > 4000:
            output = output[:4000] + "\n\n[–í—ã–≤–æ–¥ –æ–±—Ä–µ–∑–∞–Ω]"

        bot.reply_to(message, f"üì• –ö–æ–º–∞–Ω–¥–∞:\n`{command} --noconfirm`\n\nüì§ –û—Ç–≤–µ—Ç:\n{output}", parse_mode="Markdown")

        # –ï—Å–ª–∏ –ø–∞–∫–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        if code == 0:
            bot.reply_to(message, "‚úÖ –ü–∞–∫–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...")
            time.sleep(2)
            restart_bot()
        return

    # –û–±—ã—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    try:
        result = subprocess.run(
            command,
            shell=True,
            cwd=current_directory,
            capture_output=True,
            text=True
        )
        output = result.stdout + result.stderr
        if len(output) > 4000:
            output = output[:4000] + "\n\n[–í—ã–≤–æ–¥ –æ–±—Ä–µ–∑–∞–Ω]"
        bot.reply_to(message, f"üì§ –û—Ç–≤–µ—Ç:\n{output}")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {e}")


print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
bot.polling()
